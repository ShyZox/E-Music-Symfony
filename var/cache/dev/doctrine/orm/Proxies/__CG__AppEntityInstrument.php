<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Instrument extends \App\Entity\Instrument implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'intitule', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'prixAchat', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'marque', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'couleurDominante', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'NumeroSerie', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'utilisation', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'typeInstrument', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'prets', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'accessoire', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'interventions'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'intitule', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'prixAchat', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'marque', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'couleurDominante', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'NumeroSerie', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'utilisation', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'typeInstrument', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'prets', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'accessoire', '' . "\0" . 'App\\Entity\\Instrument' . "\0" . 'interventions'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Instrument $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIntitule(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntitule', []);

        return parent::getIntitule();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntitule(string $intitule): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntitule', [$intitule]);

        return parent::setIntitule($intitule);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixAchat(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixAchat', []);

        return parent::getPrixAchat();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixAchat(int $prixAchat): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixAchat', [$prixAchat]);

        return parent::setPrixAchat($prixAchat);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', []);

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque(string $marque): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', [$marque]);

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getCouleurDominante(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCouleurDominante', []);

        return parent::getCouleurDominante();
    }

    /**
     * {@inheritDoc}
     */
    public function setCouleurDominante(string $couleurDominante): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCouleurDominante', [$couleurDominante]);

        return parent::setCouleurDominante($couleurDominante);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroSerie(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroSerie', []);

        return parent::getNumeroSerie();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroSerie(string $NumeroSerie): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroSerie', [$NumeroSerie]);

        return parent::setNumeroSerie($NumeroSerie);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtilisation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtilisation', []);

        return parent::getUtilisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtilisation(string $utilisation): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtilisation', [$utilisation]);

        return parent::setUtilisation($utilisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeInstrument(): ?\App\Entity\TypeInstrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeInstrument', []);

        return parent::getTypeInstrument();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeInstrument(?\App\Entity\TypeInstrument $typeInstrument): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeInstrument', [$typeInstrument]);

        return parent::setTypeInstrument($typeInstrument);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrets(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrets', []);

        return parent::getPrets();
    }

    /**
     * {@inheritDoc}
     */
    public function addPret(\App\Entity\Pret $pret): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPret', [$pret]);

        return parent::addPret($pret);
    }

    /**
     * {@inheritDoc}
     */
    public function removePret(\App\Entity\Pret $pret): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePret', [$pret]);

        return parent::removePret($pret);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessoire(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessoire', []);

        return parent::getAccessoire();
    }

    /**
     * {@inheritDoc}
     */
    public function addAccessoire(\App\Entity\Accessoire $accessoire): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccessoire', [$accessoire]);

        return parent::addAccessoire($accessoire);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAccessoire(\App\Entity\Accessoire $accessoire): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAccessoire', [$accessoire]);

        return parent::removeAccessoire($accessoire);
    }

    /**
     * {@inheritDoc}
     */
    public function getInterventions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInterventions', []);

        return parent::getInterventions();
    }

    /**
     * {@inheritDoc}
     */
    public function addIntervention(\App\Entity\Intervention $intervention): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIntervention', [$intervention]);

        return parent::addIntervention($intervention);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIntervention(\App\Entity\Intervention $intervention): \App\Entity\Instrument
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIntervention', [$intervention]);

        return parent::removeIntervention($intervention);
    }

}
